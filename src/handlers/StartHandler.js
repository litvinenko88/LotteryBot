const { Markup } = require('telegraf');
const { InputFile } = require('telegraf');
const path = require('path');
const config = require('../config');

class StartHandler {
  constructor(userService) {
    this.userService = userService;
  }

  async handle(ctx) {
    try {
      const { user, isNew } = await this.userService.createOrGetUser(ctx.from);
      const isAdmin = user.telegramId === config.ADMIN_ID;
      
      const keyboard = this.getMainKeyboard(isAdmin);
      const welcomeText = '–ü—Ä–∏–≤–µ—Ç! üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à —á–∞—Ç-–±–æ—Ç, –≥–¥–µ –º–µ—á—Ç—ã —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å—é! –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏—Ö —Ä–æ–∑—ã–≥—Ä—ã—à–∞—Ö —Ç–æ–≤–∞—Ä–æ–≤ —Å Wildberries –∏ Ozon. üõçÔ∏è‚ú® –ü—Ä–æ—Å—Ç–æ —Å–ª–µ–¥—É–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º, –∏, –≤–æ–∑–º–æ–∂–Ω–æ, –∏–º–µ–Ω–Ω–æ —Ç—ã —Å—Ç–∞–Ω–µ—à—å —Å—á–∞—Å—Ç–ª–∏–≤—ã–º –æ–±–ª–∞–¥–∞—Ç–µ–ª–µ–º –∫—Ä—É—Ç–æ–≥–æ –ø—Ä–∏–∑–∞! –£–¥–∞—á–∏! üçÄ –ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Å—è ‚Äî —è –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏!';
      
      const imagePath = path.join(__dirname, '../../images/start.jpg');
      
      try {
        await ctx.replyWithPhoto(
          new InputFile(imagePath),
          {
            caption: welcomeText,
            reply_markup: keyboard.reply_markup
          }
        );
      } catch (photoError) {
        await ctx.reply(welcomeText, keyboard);
      }
    } catch (error) {
      await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
  }

  getMainKeyboard(isAdmin = false) {
    const buttons = [
      ['üéÅ –†–æ–∑—ã–≥—Ä—ã—à', 'üé´ –ú–æ–∏ –±–∏–ª–µ—Ç—ã'],
      ['üë• –†–µ—Ñ–µ—Ä–∞–ª—ã', 'üìú –ò—Å—Ç–æ—Ä–∏—è'],
      ['üí∞ –ö–æ—à–µ–ª–µ–∫']
    ];

    if (isAdmin) {
      buttons.push(['üõ† –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å']);
    }

    return Markup.keyboard(buttons).resize();
  }
}

module.exports = StartHandler;