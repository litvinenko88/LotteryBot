const { Markup } = require("telegraf");
const User = require("../models/User");
const { ADMIN_ID } = require("../config/bot");

const userController = {
  getMainKeyboard(isAdmin = false) {
    const mainButtons = [
      ["üéÅ –†–æ–∑—ã–≥—Ä—ã—à", "üé´ –ú–æ–∏ –±–∏–ª–µ—Ç—ã"],
      ["üë• –†–µ—Ñ–µ—Ä–∞–ª—ã", "üìú –ò—Å—Ç–æ—Ä–∏—è"],
      ["üí∞ –ö–æ—à–µ–ª–µ–∫"],
    ];

    if (isAdmin) {
      mainButtons.push(["üõ† –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]);
    }

    return Markup.keyboard(mainButtons).resize();
  },

  async start(ctx) {
    try {
      const telegramId = String(ctx.from.id);
      const isAdmin = telegramId === ADMIN_ID;
      
      const [user, created] = await User.findOrCreate({
        where: { telegramId },
        defaults: {
          username: ctx.from.username || null,
          firstName: ctx.from.first_name || null,
          lastName: ctx.from.last_name || null,
          isAdmin,
        },
      });

      if (created) {
        console.log(`–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: ID ${telegramId}, –∏–º—è: ${ctx.from.first_name}`);
        await ctx.reply(
          `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${ctx.from.first_name || '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}! üéâ\n\n–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞—Ö!`,
          userController.getMainKeyboard(isAdmin)
        );
      } else {
        console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–µ—Ä–Ω—É–ª—Å—è: ID ${telegramId}`);
        await ctx.reply(
          `–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, ${user.firstName || '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}! üëã`,
          userController.getMainKeyboard(isAdmin)
        );
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /start:', error);
      await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
  },

  async showMainMenu(ctx) {
    const isAdmin = String(ctx.from.id) === ADMIN_ID;
    await ctx.reply("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", userController.getMainKeyboard(isAdmin));
  },
};

module.exports = userController;
